---
layout: post
title:  "[工作记录] 做自动驾驶的这几年"
date:   2024-04-14 19:35:00 +0800
comments: true
categories: 回忆录
---

这篇将按照时间顺序，介绍自动驾驶技术行业的发展变迁，以及一些个人的思考。

# 前tesla时代

在2021年，自动驾驶技术届可以说是百家争鸣，有tesla, mobile eye为主的单目方案；有华为，百度为主的激光点云方案；也有我司这样的stereo+环视鱼眼方案。彼时业界真正量产落地的自动驾驶方案寥寥无几，各家都在纯视觉与激光雷达的方案之间摸索。

在那个时候，人才是第一竞争力，因此各家为了招揽优秀人才，会开出非常离谱的薪资，从而保障自己无论是在预研线还是项目落地线都有绝对的竞争力，大家都觉自己有个光明的未来。而各家的长处和侧重点也各有千秋。例如momenta的数据闭环，百度的基础建设，小鹏的泊车，以及我们的双目。

在那个时候，甚至对目标的建模方案都没有一个标准答案，有的公司把目标车辆建模成2d框+朝向，有的公司建模成bevdet空间下的7d box，而我司也独创性地定义为cuboid形式。

以现在的角度看，那时候我们的方案有着无可比拟的技术优越性，例如在16TOPS的vm 芯片上做到aeb 满分，并且D80方案几乎无懈可击。对应的，那时候的我，以及我们整个组内，有着强烈的工程师氛围，通过理性的逻辑思考，对比实验，获得有限算力下的最优效果。大家每天也充满干劲。

得益于合理的管理，每个人有明确的工作计划，因此不会无止尽的加班，只要保证自己的活干完了就可以下班。我算是干活比较快的，那时候10点前就可以下班，并且绩效依然不错。另外，当时大家都会认为方案是自己原创提出的，就像自己一手带大的孩子一样，因此会保证每一步效果最到最好，有很多难解的问题会花很多时间去解决，避免是自己的思维漏洞导致的疏漏。对应的，那时候我们的实车效果是很不错的。

# tesla FSD方案的盲目崇拜与不足

## 盲目崇拜

自从[Tesla AI Day 2021](https://www.youtube.com/watch?v=j0z4FweCy4M)2021年4月发布以来已经整整三年。时任自驾总监的karpathy在talk中介绍了开山劈地般存在的bevdet方案，并介绍了对应的4D auto labeling, simulation标注生成，dojo。learning based planning，以及Optimus。 一经发布，国内外所有自动驾驶公司开始争相模仿，

自从tesla方案发布后，我们公司火速裁掉L4部门，all in 纯视觉方案。然后全公司上下开始竞速比赛，致力于可以比别的公司更快落地bev方案，那时候，我们公司的pr内容是，国内第一家落地bev方案的公司，说到友商，往往带着戏谑的口吻说，噢，那公司的bev方案还没有开始研究呢，比我们差远了。

## 不足

bev方案落地一经1年，事实上，我发现bevdet的方案在很多方面存在着很强的不足。

### 理论与实际的差距

马斯克说过，只要数据够多，容量够大，网络可以拟合所有的场景，而得益于数据闭环和数据挖掘系统（或者说fleet learning 系统），这个效率远远高于人去写逻辑。因此tesla一直致力于把逻辑代码越写越少，包括现在的fsd v12也在贯彻这一理念。

但实际上，首先网络的容量是非常有限的，我们常常发现网络会预测出一些非常不合理的结果，例如把护栏误检成行人或者车，这一点包括我自己的tesla在高速上也会出现护栏误检行人（但是tesla并不会误刹车）。为了解决各种各样的长尾cornercase，往往需要加很多的对应数据。但是这个场景优化了，另一个场景又退化了。如此往复，导致开发人员非常痛苦。

再退一万步讲，即使是现在最牛逼的分类模型，imagenet上的precision也不会超过80%，学术界排行榜排名第一并无法帮助解决实际中的路测问题。同理，网络的性能再牛逼也无法达到100%的准确，而欠缺的这部分，往往只需要写一些非常简单的后处理逻辑就可以获得比较好的实车效果。这时候我不禁在想，这么简单的逻辑，为什么人可以通过代码实现，而网络却学不会？另一个有力证据是这个视频，强如sora也有车辆的[180度歧义](https://m.jiemian.com/video/AGUCMAhmB2YBOFVr.html)

因此现在我认为，对大模型，大数据的盲目崇拜是非常不合理的。

### 纯视觉网络如何替代radar和lidar

tesla的纯视觉方案一个出发点是，人可以开车，所以纯视觉也可以。乍一听很有道理，实则不然。自动驾驶本质上是个自动控制问题，而不是*模仿人类*！参加过电赛的同学都知道，机械可以实现一个完美的倒立摆，而人不行。人可以设计出很牛逼的无人机，但是人无法替代飞控系统去操控无人机，spacex的火箭可以自动回收，但把域控制器换成人脑加人眼，必定也是不可行的。

自动驾驶，包括上述的问题，本质上都是一个需要通过建模，优化，从而求解出精密结果的数学问题。网络确实牛逼，但是它无法替代一些世界的物理规律，从目前来看，网络本质上还只是个知其然，不知其所以然的大数据压缩器。通过这种方式去实现自动驾驶的精密操控显然没有那么严谨。举个更夸张的例子，用网络去学习一个计算器，神经网络再牛逼，也无法达到一个计算器的精度。

因此，无论是radar，还是lidar，本质上都是自动驾驶这一数学建模问题的有力输入，缺少这些输入，对应的答案必然不如加上这些输入。

### 网络究竟应该做什么

上面说过了网络不是万能的，那网络究竟应该做什么呢。其实这个答案一直是非常非常显然的。网络最适合的是总结归纳那些强语义信息。例如视觉，lidar。另外还有些不那么显然的事情，例如双目匹配，光流等图像匹配算法，这些算法的实际效果和我们的落地方案都一经远超传统算法。

但是，更重要的问题是，网络不适合做什么。到目前依然没有一个网络可以超越传统的slam后端优化问题；网络也无法模拟一个已经被证明是最优的EKF系统；planning 从原理上是可以网络化的，参考alpha go还有open ai的dota2，但是从现在的技术水名来看，planning被建模成优化问题的效果依然很难被网络取代。当然网络可以用来加速求解过程。这是后话。

另外网络非常不适合学习的是，精确的估计未定义问题。例如车的深度，人的深度，前面的坡是上坡还是下坡，停在上下坡的车高度是多少。相对的，如果加上双目，效果会远远超出单目，这里的收益来源主要是网络有一个被明确定义的图像匹配问题，而不是网络的泛化脑补能力。

因此，遇事不决就把问题抛給网络的方案是非常不负责任的，而我也坚信transfomer相比较cov没有绝对性的质变，现在的很多算法把各种难解的问题统统丢给transformer，但我们实践中发现效果实在一般。

另外，tesla曾一度想上线纯视觉方案，把radar去掉。而我们发现，实际上自动驾驶中的目标速度，加速度估计对planning规划是至关重要的，而纯视觉网络估计出的速度/加速度几乎不可使用。会有数不胜数的corner case无法解决。

### bev方案的劣势

- 标注问题。这应该是bev方案中最大的一个问题，就是标注深度的不可获得。纯视觉标注的深度往往无法权衡好准确性和平滑性，这一点在远距离目标中显得尤为明显。即使使用lidar标注，也存在lidar 拖尾问题（即使可以通过各种方式弥补），以及lidar和图像天生存在的对不齐问题。

- bev方案对深度估计有天然的劣势。这就导致对行人这种没有明确朝向语义的目标的朝向估计变得非常tricky，corner case几乎变得不可解。另外，原本bev方案期望可以解决目标的高度变化，但实际上引入高度这一纬的变量使得网络的学习难度大大增加，对应目标的深度抖动会更剧烈。

- 另一个劣势是跨相机的目标估计（或者说严重依赖标定）。有意思的是，原本bev的一个优势就是可以解决传统方案跨相机的目标分裂和匹配问题。但实际中发现，bev方案对标定的精度非常严苛，而标定的精度往往不可能完美，这就导致bev方案中同样存在目标分裂的问题。另外，由于rolling shutter相机存在同步问题，在自车转弯时，bev方案的估计往往会更加的退化。另外，在自车急刹车或者急加速时，pitch角变化也会导致bev的深度估计带来bias，进而导致aeb变得很难做。

## 为什么大家依然推崇bev方案

自动驾驶问题，本质上是个corner case问题，99%的场景总是很简单的，而这些场景的解决方案是什么其实影响并不大。核心问题是1%的各种奇奇怪怪的case。但是这个现实是很难给投资人，OEM厂，以及客户解释的。他们喜欢新颖的技术，统一而圆满的方案。另外，当所有人默认bev方案是自动驾驶这个浪潮中最大的浪花，在bev方案的浪花上冲浪就代表着你有最先进的技术。

# 现状

但是，为了（看起来）实现技术上的突破，获得竞争力，大家的kpi变成上线bev方案。这个过程中的各种对比实验，更突破的方案，都被忽视。更露骨的说，bev方案的出现，让一个个有着自我独立思考的工程师变成盲目抄别人ppt的跟风者。

当技术已经被默认固定，人才，方案就不再是第一竞争力。我也从10105的工作时长逐渐变成10126甚至10127的工作时长，是的，这就是内卷。

当tesla的方案被奉为行业圭臬，没有人再开始思考新技术新方案，大家都渴望着tesla再开个新发布会，养活我们这些优秀工程师。

# 一些个人思考

如上所说，逐渐的，我觉得自己干的工作没什么意思。不过想了想，世界本来就是这样，优秀的论文很多，被后世记住真的帮助世人的很少。优秀的产品很多，改变行业，真的影响世界的很少，只是恰好我和我的公司不是那个改变世界的人和公司。

最近真的很摆，有问题甩锅给下面的人，每天就是和各种项目组扯皮打太极，好久都不认真写代码了。最近闲的都开始看byvoid的博客了。不敢相信自己已经追寻byvoid的博客10多年，又开始看解题报告，看算法题，防止自己脑袋锈的太快。

我眼见着自动驾驶潮涨潮落，也眼见着自己从一个充满理想的年轻人变成循规蹈矩pua下属的油腻中年人。这大概不是我想要的生活。自从我想明白这一点，就开始在公司里变得无所畏惧，怼天怼地。当大家已经习惯了模仿别人的方案，不经过自己思考。我想做那把利剑，刺破一切的不合理。最近怼了领导好多次，感觉自己人快没了。

但是下一站该去哪里呢，没想好。

我想和(byvoid)[https://byvoid.com/zht/]一样周游世界，以前觉得这是个不可能的事情，那时候我无法离开我的朋友们，一天不和朋友们开黑就浑身难受，天天去网吧打dodo打到12点，互相骂骂咧咧，依依不舍的下机。如今路上走着走着只剩我一人，朋友们也都成家。我倒更像个居无定所的旅客，既然如此，不如走的更远一点。

回上海是另一个选择，进一家轻松的公司，背着房贷，做一个合格的韭菜。大概唯一的好处是可以和朋友们一起喝酒一起看演出。但我明白，这些不会持久，就像过去那样。到时候我大概又会厌烦无聊而平凡的生活吧。

最后一个选择就是留在深圳，通过自己的努力改变现状，超过tesla。可是显然这太难了，我能改变的也太少，推行的很多事情已经得罪了很多人，能否安稳的留在公司都是个问题。领导天天画饼说公司上市了就如何如何，我深表怀疑，即使上市了财务自由了我也不见的会开心多少。

迷茫也不一定是坏事，我只是眼睁睁看着自己接受着平凡的人生平凡的自己，而不感到愤怒或者害怕。
